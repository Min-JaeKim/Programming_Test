# python

## baek 1052 물병 실버1

https://www.acmicpc.net/problem/1052

> python3 80ms

* 문제

  > 지민이는 N개의 물병을 가지고 있다. 각 물병에는 물을 무한대로 부을 수 있다. 처음에 모든 물병에는 물이 1리터씩 들어있다. 지민이는 이 물병을 또 다른 장소로 옮기려고 한다. 지민이는 한 번에 K개의 물병을 옮길 수 있다. 하지만, 지민이는 물을 낭비하기는 싫고, 이동을 한 번보다 많이 하기는 싫다. 따라서, 지민이는 물병의 물을 적절히 재분배해서, K개를 넘지 않는 비어있지 않은 물병을 만들려고 한다.
  >
  > 물은 다음과 같이 재분배 한다.
  >
  > > 먼저 같은 양의 물이 들어있는 물병 두 개를 고른다. 그 다음에 한 개의 물병에 다른 한 쪽에 있는 물을 모두 붓는다. 이 방법을 필요한 만큼 계속 한다.
  >
  > 이런 제약 때문에, N개로 K개를 넘지않는 비어있지 않은 물병을 만드는 것이 불가능할 수도 있다. 다행히도, 새로운 물병을 살 수 있다. 상점에서 사는 물병은 물이 1리터 들어있다.
  >
  > 예를 들어, N=3이고, K=1일 때를 보면, 물병 3개로 1개를 만드는 것이 불가능하다. 한 병을 또다른 병에 부으면, 2리터가 들어있는 물병 하나와, 1리터가 들어있는 물병 하나가 남는다. 만약 상점에서 한 개의 물병을 산다면, 2리터가 들어있는 물병 두 개를 만들 수 있고, 마지막으로 4리터가 들어있는 물병 한 개를 만들 수 있다.

* 입력

  > 첫째 줄에 N과 K가 주어진다. N은 107보다 작거나 같은 자연수이고, K는 1,000보다 작거나 같은 자연수이다.
  >
  > ```bash
  > 3 1
  > ```
  >
  
* 출력

  > 첫째 줄에 상점에서 사야하는 물병의 최솟값을 출력한다. 만약 정답이 없을 경우에는 -1을 출력한다.
  >
  > ```bash
  > 1
  > ```



- 틀린 코드

```python
import sys
input = sys.stdin.readline

n, k = map(int, input().split())
z = n

while bin(n).count('1') > k:
    n += 1 << bin(n)[::-1].find('1')

print(n - z)
```

> 처음으로 풀어본 비트연산자 풀이
>
> 아 분명 다른 사람들이 접근한 방식을 보면 이렇게도 풀 수 있을 것 같은데 ㅇㅣ 풀이는 왜 없지? 싶어서 이렇게 풀어보았다.



* 모범답안

  ```python
  56
  
  n,k=map(int,input().split())
  c=0
  while bin(n).count('1')>k:
   a=2**(bin(n)[::-1].index('1'))
   c+=a
   n+=a
  print(c)
  ```

  > 모지.. 2의 제곱연산해서 푸는 게 더 빠른건가
  >
  > 별 차이는 없지만 걍 미묘하게 빨라서 궁금
  >
  > 

